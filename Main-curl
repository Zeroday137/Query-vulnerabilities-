query {
  anomalydetectionruleconfigs(
    AnomalyScope: {
      ScopeType: ENVIRONMENT
      environmentScope: {id: " "}
    }
  ) {
    total
    results {
      hidden
      ruleId
      ruleName
      eventLabels {
        labelKey
        labelValue
      }
      eventDetails {
        description
        impact
        mitigation
        references
      }
      subRuleConfigs {
        subRuleId
        subRuleName
        subRuleTypes
        eventLabels {
          labelKey
          labelValue
        }
        eventDetails {
          description
          impact
          mitigation
          references
        }
      }
    }
  }

  events(
    between: {
      startTime: "0000-01-31T11:29:08.344Z"
      endTime: "0000-02-31T11:29:08.344Z"
    }
    offset: 0
    filterBy: [
      {
        keyExpression: { key: "threatCategory" }
        operator: NOT_IN
        value: ["Null"]
        type: ATTRIBUTE
      }
    ]
  ) {
    results {
      id
      name: attribute(expression: { key: "name" })
      timestamp: attribute(expression: { key: "timestamp" })
      type: attribute(expression: { key: "type" })
      environment: attribute(expression: { key: "environment" })
      spanId: attribute(expression: { key: "spanId" })
      apiId: attribute(expression: { key: "apiId" })
      apiName: attribute(expression: { key: "apiName" })
      apiUri: attribute(expression: { key: "apiUri" })
      category: attribute(expression: { key: "category" })
      serviceId: attribute(expression: { key: "serviceId" })
      serviceName: attribute(expression: { key: "serviceName" })
      eventDescription: attribute(expression: { key: "eventDescription" })
      actorEntityId: attribute(expression: { key: "actorEntityId" })
      actorName: attribute(expression: { key: "actorName" })
      actorIpAddress: attribute(expression: { key: "actorIpAddress" })
      actorDevice: attribute(expression: { key: "actorDevice" })
      actorSession: attribute(expression: { key: "actorSession" })
      securityScore: attribute(expression: { key: "securityScore" })
      securityScoreCategory: attribute(expression: { key: "securityScoreCategory" })
      securityEventCategory: attribute(expression: { key: "securityEventCategory" })
      threatCategory: attribute(expression: { key: "threatCategory" })
      securityEventTypeId: attribute(expression: { key: "securityEventTypeId" })
      spanStartTimestamp: attribute(expression: { key: "spanStartTimestamp" })
      actorCountry: attribute(expression: { key: "actorCountry" })
      actorState: attribute(expression: { key: "actorState" })
      actorCity: attribute(expression: { key: "actorCity" })
      eventImpactLevel: attribute(expression: { key: "eventImpactLevel" })
      eventConfidenceLevel: attribute(expression: { key: "eventConfidenceLevel" })
      ipCategories: attribute(expression: { key: "ipCategories" })
      ipReputationLevel: attribute(expression: { key: "ipReputationLevel" })
      ipConnectionType: attribute(expression: { key: "ipConnectionType" })
      ipAsn: attribute(expression: { key: "ipAsn" })
      ipOrganisation: attribute(expression: { key: "ipOrganisation" })
      traceId: attribute(expression: { key: "traceId" })
      anomalousAttribute: attribute(expression: { key: "anomalousAttribute" })
      scannerType: attribute(expression: { key: "scannerType" })
      SERVICE: entity(type: "SERVICE") {
        id: attribute(expression: { key: "id" })
        name: attribute(expression: { key: "name" })
      }
      API: entity(type: "API") {
        id: attribute(expression: { key: "id" })
        name: attribute(expression: { key: "name" })
        isAuthenticated: attribute(expression: { key: "isAuthenticated" })
        hasPii: attribute(expression: { key: "hasPii" })
        changeLabel: attribute(expression: { key: "changeLabel" })
        changeLabelTimestamp: attribute(expression: { key: "changeLabelTimestamp" })
      }
    }
  }
}
